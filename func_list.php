<?

	// –ë–∞–∑–∞ –≤ –ª—é–æ–º —Å–ª—É—á–∞–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è
	$db = new mysqli( 'localhost', $g['db'][0], $g['db'][1], $g['db'][2] );
	

// –ü–æ–ª—É—á–∞–µ—Ç –≥–æ—Ä–æ–¥ –ø–æ id
	function get_city( $id ){
		global $ua, $g, $db;
		
		$res = $db -> query( "SELECT * FROM `cty` WHERE `id` = $id" );
		
		if( !$res -> num_rows ) return false;
		
		return $res -> fetch_array( MYSQLI_ASSOC );
		
	}
		
// –í—Å–µ –∑–≤–æ–Ω–∫–∏ –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É
	function call_byNum( $phn ){
		global $db;
		
		$res = $db -> query( "SELECT * FROM `calls` WHERE `o` = '{$phn}'" );
		
		if( !$res -> num_rows ) return false;
		
		while( $r = $res -> fetch_array( MYSQLI_ASSOC ) ) $a[] = $r;
		
		return $a;
		
	}
		
// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–≤–æ–Ω–∫–µ
	function get_call( $uuid ){
		global $ua, $g, $db;
		
		$res = $db -> query( "SELECT * FROM `calls` WHERE `uuid` = '{$uuid}'" );
		
		if( !$res -> num_rows ) return false;
		
		return $res -> fetch_array( MYSQLI_ASSOC );
		
	}
		
// –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç ( —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç ) –∑–∞—è–≤–∫—É
	function order(){
		global $ua, $g, $db;
		
		// –ü–æ–ª—É—á–∞–µ—Ç –∑–∞—è–≤–∫—É
		$r = get_orders( 'order' )[0]; $qar = json_decode( $r['jso'], true );
		
		// –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∑–≤–æ–Ω–∫–∏ –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É
		$na = call_byNum( get_call( $r['uuid'] )['o'] );
		
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç, –µ—Å–ª–∏ –Ω–µ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞
		if( $g['u']['id'] != $r['oid'] ) $disa = true;
		
		// –ü–æ–ª—É—á–∞–µ—Ç –≥–æ—Ä–æ–¥
		$ca = get_city( $r['cty'] ); $r['cty'] = "{$ca['cty']} {$ca['id']}";
		
		// –ü–æ–ª—É—á–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —ç—Ç–æ–≥–æ —à–ª—é–∑–∞ // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º—É –≤–∏–¥—É
		foreach( json_decode( file_get_contents( "{$g['u']['crm']}.json" ),true ) as $k => $a ) if( $a[0] == $r['tid'] ) break;
		foreach( $a as $k => $v ) if( is_numeric( $v[0] ) ) $qa[$v[0]] = $v[1]; $g['fa'] += $qa;
		
		// –£–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–µ—Ö. –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—ã–≤–æ–¥–∏–º
		foreach( $r as $k => $v ) if( !isset( $g['fa'][$k] ) ) unset( $r[$k] );
		
		// –î–æ–±–∞–≤–∏—Ç –≤–æ–ø—Ä–æ—Å—ã
		$r = $r + $qar;
		
		// –í—ã–≤–æ–¥ –ø–æ–ª–µ–π
		$g['body'] .= "<h3>–ó–∞—è–≤–∫–∞ ‚Ññ{$ua[1]}</h3><span class='text-secondary'>–ú–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å!</span></div><form method='post' action='/update_order'>\n\n";
		
		// fa - –º–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å–æ–≤ - r - –º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤
		$i = 0; foreach( $r as $k => $v ){ $i++;
			
			$g['body'] .= "\n<div class='row py-2 click' data-target='in{$i}'>\n\t<div class='col-12 col-md-6'>{$g['fa'][$k]}\n\t</div>\n\t<div class='col-12 col-md-6'>\n\t\t<input " . ( $disa ? 'disabled' : NULL ) . " id='in{$i}' class='form-control' name='{$k}' type='text' value='{$r[$k]}' " . ( $k == 'cty' ? "data-ajax='cty'" : '' ) . " />" . ( $k == 'cty' ? "<p class='sresalt'></a><br /></p>" : NULL ) . "\n\t</div>\n</div>\n";
			
		}
		
		// –ê—É–¥–∏–æ, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É
		$s = NULL; foreach( $na as $k => $v ) $s .= "<p class='mt-3'>" . date( 'd.m.Y H:i', $v['uts'] ) . " ( {$v['dura']} —Å–µ–∫ )<br />" . ( !empty( $v['url'] ) ? "<audio controls=''><source src='{$v['url']}' type='audio/mpeg'></audio>" : NULL ) . "</p>";
		
		// –ó–∞–≤–µ—Ä—â–µ–Ω–∏–µ
		$g['body'] .= $disa ? NULL : "<div class='my-2'><input type='hidden' value='{$ua[1]}' name='id'><button class='btn btn-primary' type='submit'>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button></form>";
		$g['body'] .= $s;
		
		include_once( 'bootstrap.php' );
		
	}
		
// –î–æ—Å—Ç–∞–Ω–µ—Ç –≤—Å–µ –∑–∞—è–≤–∫–∏
	function get_orders( $o = NULL ){
		global $ua, $g, $db;
		
		// –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
		if( $o == 'by_user' ) $q = "SELECT * FROM `orders` WHERE `oid` = '{$g['u']['id']}' ORDER by `id` DESC";
		
		// –ö–æ–≥–¥–∞ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –æ—Ä–¥–µ—Ä
		if( $o == 'order' ) $q = "SELECT * FROM `orders` WHERE `id` = '{$ua[1]}'";
		
		// –î–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫, –µ—Å–ª–∏ –æ–ø—è—Ç—å –∑–≤–æ–Ω–∏—Ç
		if( preg_match( '/^\+\d{5,}$/', $o ) ) $q = "SELECT * FROM `orders` WHERE `call` = '{$o}' ORDER by `id` DESC";
		
		$res = $db -> query( $q );
		
		if( !$res -> num_rows ) return false;
		
		while( $r = $res -> fetch_array( MYSQLI_ASSOC ) ) $a[] = $r;
		
		return $a;
		
	}
		
// –û–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É
	function update_order(){
		global $ua, $g, $db;
		
		// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–ª, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ
		$r = $_POST;
		
		// –ì–æ—Ä–æ–¥ –ø–æ –¥—É—Ä–∞—Ü–∫–∏ ))
		$r['cty'] = preg_match( '/.+(\d{4})$/', $r['cty'] , $m ) ? $m[1] : 0;
		
		// –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
		foreach( $r as $k => $v ) if( is_numeric( $k ) ) $q[$k] = $v;
		
		// –ó–∞–Ω–æ—à—É –≤ –±–∞–∑—É
		$q = "UPDATE `orders` SET `jso` = '" . json_encode( $q, JSON_UNESCAPED_UNICODE ) . "', `cty` = {$r['cty']}, `price` = " . preg_replace( '/\D/', '', $r['price'] ) . ", `phn` = " . ( $r['phn'] ? "'{$r['phn']}'" : 'NULL'  ) . ", `nme` = '{$r['nme']}', `txt` = '{$r['txt']}' WHERE `id` = {$r['id']}";
		
		$db -> query( $q );
		
		// –ü–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ
		header( "Location: /?{$r['id']}" );
		
		exit;
		
	}
	
// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞—è–≤–∫—É
	function save_call(){
		global $ua, $g, $db;
		
		// –¶–µ–Ω–∞ –∑–∞—è–≤–∫–∏
		$_POST['price'] = preg_replace( '/\D/', '', $_POST['q'][$_POST['price']['num']] ) * $_POST['price']['val'];
		
		// –ì–æ—Ä–æ–¥ –ø–æ –¥—É—Ä–∞—Ü–∫–∏ ))
		$_POST['cty'] = preg_match( '/.+(\d{4})$/', $_POST['cty'] , $m ) ? $m[1] : 0;
		
		// –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
		$r = array_merge( get_call( $_POST['uuid'] ), $_POST ); $r['q'] = json_encode( $r['q'], JSON_UNESCAPED_UNICODE );
		
		// print_r( $r ); exit;
		
		// –ó–∞–Ω–æ—à—É –≤ –±–∞–∑—É
		$db -> query( "INSERT INTO `orders` ( `crm`, `oid`, `uuid`, `uts`, `jso`, `cty`, `tid`, `price`, `call`, `phn`, `nme`, `txt` ) VALUES ( {$r['crm']}, {$g['u']['id']}, '{$r['uuid']}', '{$_SERVER['REQUEST_TIME']}', '{$r['q']}', {$r['cty']}, {$r['tid']}, {$r['price']}, '{$r['call']}', " . ( $r['phn'] ? "'{$r['phn']}'" : 'NULL'  ) . ", '{$r['nme']}', '{$r['txt']}' );" );
		
		// –ü–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ
		header( "Location: /?saved_order={$db -> insert_id}" );
		
		exit;
		
	}
	
// –í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫
	function call_i(){
		global $ua, $g, $db;
		
		// –ü–æ–ª—É—á–∞–µ—Ç –∑–≤–æ–Ω–æ–∫
		if( !$r = get_call( $ua[1] ) ) exit( 'err_04' );
		
		// –ü–æ–ª—É—á–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è —ç—Ç–æ–≥–æ —à–ª—é–∑–∞
		$a = json_decode( file_get_contents( "{$g['u']['crm']}.json" ),true );
		
		// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
		$ss = NULL; foreach( $a as $k => $v ) if( !empty( $v[1] ) ) $ss .= "<a href='/call_i/{$r['uuid']}?script={$k}'>{$v[1]}</a> / "; $ss .= "<a href='/call_i/{$r['uuid']}?script=other'>–î—Ä—É–≥–æ–µ</a>";
		
		// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –¥–æ–ø—Å–∫—Ä–∏–ø—Ç–∞
		$scr = isset( $_REQUEST['script'] ) ? $_REQUEST['script'] : $r['g'];
		
		// –ï—Å–ª–∏ —Ç–∞–∫–æ–π —à–ª—é–∑ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ
		if( isset( $a[$scr] ) ){
			
			// –ï—Å–ª–∏ —É –Ω–µ–≥–æ –º–∞—Ä–∫–µ—Ä same // –¢–µ–º—É –æ—Å—Ç–∞–≤–∏—Ç
			if( $a[$r['g']][2][0] == 'same' ){
				
				$tid = $a[$r['g']][0];
				$a = $a[$a[$r['g']][2][1]];
				$a[0] = $tid;
				
			} else {
				
				$a = $a[$scr];
				
			}
			
		} else {
			
			// –°–∫—Ä–∏–ø—Ç–∞ —Å —Ç–∞–∫–∏–º —à–ª—é–∑–æ–º –Ω–µ—Ç
			exit( 'err_05' );
			
		}
		
		// –í—ã–≤–æ–¥ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞
		$q = NULL; $i = 0; foreach( $a as $k => $v ){ if( $k < 2 ) continue; $i++;
			
			// –§–æ—Ä–º—É–ª–∞ –ø—Ä–∞–π—Å–∞
			if( $v[2][1] == 'price' ) $price = "<input type='hidden' name='price[val]' value='{$v[2][2]}' /><input type='hidden' name='price[num]' value='{$v[0]}' />";
			
			// –¢–µ–≥–∏, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å #
			$sub_text = "<small class='text-success none'>{$v[2][0]}</small>";
			
			if( preg_match( '/(.*)#(.+)/', $v[2][0], $m ) ){
				
				$sub_text = "<small class='text-success ok'>{$m[1]}";
				$ta = explode( " ", $m[2] ); foreach( $ta as $w ) $sub_text .= "<a class='in_tag'>{$w}</a>, "; $sub_text .= "</small>";
				
			}
			
			$q .= "\n<div class='row py-2 click' data-target='in{$i}'>\n\t<div class='col-12 col-md-6'><b>{$v[1]}</b><br />{$sub_text}\n\t</div>\n\t<div class='col-12 col-md-6'>\n\t\t<input id='in{$i}' class='form-control-lg' name='" . ( is_numeric( $v[0] ) ? "q[{$v[0]}]" : $v[0] ) . "' type='text' " . ( $v[0] == 1 ? "autofocus" : NULL ) . " " . ( $v[3] == 'ajax' ? "data-ajax='{$v[0]}'" : NULL ) . " />{$price}" . ( $v[3] == 'ajax' ? "<p class='sresalt'></a><br /></p>" : NULL ) . "\n\t</div>\n</div>";
			
		}
		
		// –°–∫—Ä—ã—Ç—ã–µ
		$q .= "<input type='hidden' name='call' value='{$r['o']}' /><input type='hidden' name='tid' value='{$a[0]}' /><input type='hidden' name='uuid' value='{$r['uuid']}' /><input type='hidden' name='src' value='{$src}' />";
		
		// –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ –∑–≤–æ–Ω–∫–∏ –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É
		if( $na = call_byNum( $r['o'] )  ) $s = NULL; foreach( $na as $k => $v ) $s .= "<p class='mt-3'>" . date( 'd.m.Y H:i', $v['uts'] ) . " ( {$v['dura']} —Å–µ–∫ )<br />" . ( !empty( $v['url'] ) ? "<audio controls=''><source src='{$v['url']}' type='audio/mpeg'></audio>" : NULL ) . "</p>";
		
		// –ï—Å–ª–∏ –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª. —É–∂–µ –±—ã–ª–∏ –∑–∞—è–≤–∫–∏
		$so = ''; if( $ora = get_orders( $r['o'] ) ){ $so = "<p>üò≥ <b class='text-danger'>–í–Ω–∏–º–∞–Ω–∏–µ: –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É –µ—Å—Ç—å –∑–∞—è–≤–∫–∏:</b><br />"; foreach( $ora as $k => $v ) $so .= "<a target='_blank' href='/order/{$v['id']}'>‚Ññ{$v['id']} –æ—Ç " . date( 'd.m.Y H:i', $v['uts'] ) . "</a>"; $so .= "</p>"; }
		
		$g['body'] = preg_replace( [ '/-ORDERS-/', '/-SSS-/', '/-NME-/', '/-QUIZ-/', '/-THEME-/', '/-INTO-/', '/-FROM-/', '/-HIST-/' ], [ $so, $ss, "[{$g['u']['name']}]", $q, "[{$a[1]}]", $r['g'], $r['o'], $s ], file_get_contents( 'inc/tm_call_i.html' ) );
		
		// print_r( $g ); print_r( $ss ); print_r( $a ); print_r( $r ); exit;
		
		include_once( 'bootstrap.php' );
		
	}
		
// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
	function check_auth(){
		global $ua, $g, $db;
		
		// –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω
		$auth = false;
		
		$g['menu'] = '–°–†–ú. –†–∞–±–æ—Ç–∞ —Å–æ –∑–≤–æ–Ω–∫–∞–º–∏!-';
		
		// –õ–æ–≥–∞—É—Ç
		if( $_SERVER['REQUEST_URI'] == '/logout' ){ logout(); }
		
		// –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è —Å —Ñ–æ—Ä–º—ã
		if( $_SERVER['REQUEST_URI'] == '/login' ){
			
			// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–Ω–∞, —Ç—É—Ç –ø–æ —Ö–æ—Ä–æ—à–µ–º—É –Ω–∞–¥–æ –∫–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ª–æ–≥–∏–Ω–∞ —Å—á–∏—Ç–∞—Ç—å
			$res = $db -> query( "SELECT * FROM `users` WHERE `eml` = '{$_POST['email']}' AND `pass` = '" . md5( $_POST['password'] ) . "'" );
			
			if( $res -> num_rows ){
				
				$r = $res -> fetch_array( MYSQLI_ASSOC );
					
				unset( $r['pass'] );
				
				setcookie( 'user', json_encode( $r, JSON_UNESCAPED_UNICODE ), $_SERVER['REQUEST_TIME'] + 30*24*60*60, "/" );
				
				header( "Location: /" );
				
				exit;
				
			}
						
		}
		
		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		if( !empty( $_COOKIE['user'] ) ){
			
			$g['u'] = json_decode( $_COOKIE['user'], true );
			
			$auth = true;
			
			// –í–ù–ò–ú–ê–ù–ò–ï: –°–¥–µ–ª–∞—Ç—å —Ç–µ–º—É —Å —Å–æ–ª—å–∫–æ–π
			
		}
		
		// –§–æ—Ä–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
		if( !$auth ){
			
			$g['title'] = '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è';
			$g['body'] = 'inc/login_form.html';
			
			include_once( 'bootstrap.php' );
		}
		
		return true;
		
	}
	
// –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
	function dev(){
		global $g;
		
		$g['title'] = '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è';
		$g['body'] = 'inc/template.html';
		unset( $g['menu'] );
		
		include_once( 'bootstrap.php' );
		
	}
	
// –õ–æ–≥–∏–Ω / —Ä–∞–∑–ª–æ–≥–∏–Ω
	function logout(){
		
		setcookie( 'user', null, -1 );
		
		unset( $_COOKIE['user'] );
		
		header( 'Location: /' );
		
		exit;
		
	}

// –ü—Ä–æ—Ñ–∏–ª—å
	function profile(){
		global $g;
		
		$g['title'] = '–ü—Ä–æ—Ñ–∏–ª—å';
		$g['body'] = "<div class='col'><p>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å.</p><p><a href='/logout'>–í—ã—Ö–æ–¥</a></p></div>";
		
		unset( $g['menu'] );
		include_once( 'bootstrap.php' );
		
	}

// –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
	function start_work(){
		global $g, $db;
		
		if( isset( $_REQUEST['go'] ) ){
			
			// –ü–µ—Ä–µ—É–ø–∞–∫—É—é –∫—É–∫–∏
			setcookie( 'user', null, -1 ); unset( $_COOKIE['user'] );
			
			// –î–æ–±–∞–≤–ª—é –≤—Ä–µ–º—è —Å—Ç–æ–ø–∞ —Å–º–µ–Ω—ã
			$g['u']['shift_stop'] = $_SERVER['REQUEST_TIME'] + 4 * 60 * 60 + 10 * 60;
			
			setcookie( 'user', json_encode( $g['u'], JSON_UNESCAPED_UNICODE ), $_SERVER['REQUEST_TIME'] + 30*24*60*60, "/" );
			
			header( "Location: /" );
			
		}
		
		$g['title'] = "–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã!";
		$g['body'] = "inc/start_work.html";
		
		unset( $g['menu'] );
		
		include_once( 'bootstrap.php' );
		
	}

// –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
	function main_screen(){
		global $g;
		
		// –ù–∞ –≥–ª–∞–Ω–æ–º —ç–∫—Ä–∞–Ω–µ:
		// –ü–æ–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–∫–∏
		// –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞—è–≤–∫–∏ —Å —Å–∞–π—Ç–æ–≤
		// –ü–æ–∫–∞–∑–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∏ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è
		// $a = json_decode( file_get_contents( "{$g['u']['crm']}.json" ),true );
		
		// –î–æ—Å—Ç–∞–Ω–µ—Ç –∑–∞—è–≤–∫–∏ —ç—Ç–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
		$s = NULL; if( $a = get_orders( 'by_user' ) ) foreach( $a as $r ){
			
			$s .= "<p class='small'><b class='badge bg-secondary mx-1'>140</b> <a href='/order/{$r['id']}' class='text-info'>–ó–∞—è–≤–∫–∞ ‚Ññ{$r['id']}</a><br /><span class='text-secondary'>" . date( 'd.m H:i', $r['uts'] ) . "</span></p>\n";
			
		}
		
		// print_r( $r );
		// print_r( $a );
		
		$g['title'] = 'CRM ' . $g['u']['crm'];
		$g['body'] = preg_replace( '/-YORS-/', $s, file_get_contents( 'inc/template.html' ) );
		
		include_once( 'bootstrap.php' );
		
	}

// –†–∞–∑–±–æ—Ä –ß–ü–£ + —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –ø—Ä–µ–ª–æ–∞–¥–æ–≤
	function human_url(){
		global $ua;
		
		// –†–∞–∑–±–∏—Ä–∞—é –ß–ü–£ –≤ –º–∞—Å—Å–∏–≤
		if( !empty( $_REQUEST['p'] ) ) $ua = explode( "/", rtrim( $_REQUEST['p'], '/' ) ); if( empty( $ua[0] ) ) $ua[0] = 'main_screen';
		
		// –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –ø–æ–¥–∫–ª—é—á–∞—é
		if( function_exists( $ua[0] ) ) $ua[0]();
		
		exit;
	}

?>